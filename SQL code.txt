SELECT 20 + 30 AS Result;
SELECT 20 + 30;

DROP TABLE IF EXISTS Stock;
 
CREATE TABLE Stock (
	Id         INTEGER PRIMARY KEY,
	Ticker     TEXT    NOT NULL,
	FullName   TEXT    NOT NULL,
	TradingDay TEXT    NOT NULL,
	Price      REAL    NOT NULL CHECK (Price > 0)
);
 
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price) 
VALUES (1, 'AAPL', 'APPLE INC.', '2021-02-03', 134.99);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price) 
VALUES (2, 'MSFT', 'MICROSOFT CORP.', '2021-02-03', 240.7);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price) 
VALUES (3, 'AMZN', 'AMAZON COM INC', '2021-02-03', 3380.29);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price) 
VALUES (4, 'GOOGL', 'ALPHABET INC (GOOGLE) CLASS A', '2021-02-03', 2040.09);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price) 
VALUES (5, 'FB', 'FACEBOOK INC', '2021-02-03', 264.88);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price) 
VALUES (6, 'TSLA', 'TESLA INC', '2021-02-03', 864.75);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price) 
VALUES (7, 'BABA', 'ALIBABA GROUP HOLDINGS LTD.', '2021-02-03', 264.70);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price) 
VALUES (8, 'V', 'VISA INC', '2021-02-03', 202.83);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price) 
VALUES (9, 'PYPL', 'PAYPAL HOLDINGS INC', '2021-02-03', 251.93);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price) 
VALUES (10, 'ORCL', 'ORACLE CORP', '2021-02-03', 62.26);

SELECT * FROM Stock;

SELECT Ticker, FullName, Price FROM Stock;
SELECT FullName FROM Stock;
SELECT *, LENGTH(FullName) AS LengthOfName FROM Stock;
SELECT FullName, Ticker FROM Stock;

DROP TABLE IF EXISTS employee;
DROP TABLE IF EXISTS department;
DROP TABLE IF EXISTS location;
DROP TABLE IF EXISTS country;
DROP TABLE IF EXISTS job;
 
CREATE TABLE country (
	country_id   TEXT    NOT NULL,
	country_name TEXT    NOT NULL,
	PRIMARY KEY (country_id)
);
 
CREATE TABLE location (
	location_id    INTEGER NOT NULL,
	street_address TEXT,
	postal_code    TEXT,
	city           TEXT    NOT NULL,
	state_province TEXT,
	country_id     INTEGER NOT NULL,
	PRIMARY KEY (location_id),
	FOREIGN KEY (country_id) REFERENCES country (country_id)
);
 
CREATE TABLE department (
	department_id   INTEGER NOT NULL,
	department_name TEXT    NOT NULL,
	location_id     INTEGER NOT NULL,
	PRIMARY KEY (department_id),
	FOREIGN KEY (location_id) REFERENCES location (location_id)
);
 
CREATE TABLE job (
	job_id     INTEGER NOT NULL,
	job_title  TEXT    NOT NULL,
	min_salary REAL    NOT NULL,
	max_salary REAL    NOT NULL,
	PRIMARY KEY (job_id)
);
 
CREATE TABLE employee (
	employee_id   INTEGER NOT NULL,
	first_name    TEXT,
	last_name     TEXT    NOT NULL,
	email         TEXT    NOT NULL,
	phone_number  TEXT,
	hire_date     TEXT    NOT NULL,
	job_id        INTEGER NOT NULL,
	salary        REAL    NOT NULL,
	department_id INTEGER NOT NULL,
	PRIMARY KEY (employee_id),
	FOREIGN KEY (job_id) REFERENCES job (job_id),
	FOREIGN KEY (department_id) REFERENCES department (department_id)
);
 
-- country
INSERT INTO country(country_id, country_name) VALUES ('AR', 'Argentina');
INSERT INTO country(country_id, country_name) VALUES ('AU', 'Australia');
INSERT INTO country(country_id, country_name) VALUES ('BE', 'Belgium');
INSERT INTO country(country_id, country_name) VALUES ('BR', 'Brazil');
INSERT INTO country(country_id, country_name) VALUES ('CA', 'Canada');
INSERT INTO country(country_id, country_name) VALUES ('CH', 'Switzerland');
INSERT INTO country(country_id, country_name) VALUES ('CN', 'China');
INSERT INTO country(country_id, country_name) VALUES ('DE', 'Germany');
INSERT INTO country(country_id, country_name) VALUES ('DK', 'Denmark');
INSERT INTO country(country_id, country_name) VALUES ('EG', 'Egypt');
INSERT INTO country(country_id, country_name) VALUES ('FR', 'France');
INSERT INTO country(country_id, country_name) VALUES ('HK', 'HongKong');
INSERT INTO country(country_id, country_name) VALUES ('IL', 'Israel');
INSERT INTO country(country_id, country_name) VALUES ('IN', 'India');
INSERT INTO country(country_id, country_name) VALUES ('IT', 'Italy');
INSERT INTO country(country_id, country_name) VALUES ('JP', 'Japan');
INSERT INTO country(country_id, country_name) VALUES ('KW', 'Kuwait');
INSERT INTO country(country_id, country_name) VALUES ('MX', 'Mexico');
INSERT INTO country(country_id, country_name) VALUES ('NG', 'Nigeria');
INSERT INTO country(country_id, country_name) VALUES ('NL', 'Netherlands');
INSERT INTO country(country_id, country_name) VALUES ('SG', 'Singapore');
INSERT INTO country(country_id, country_name) VALUES ('UK', 'United Kingdom');
INSERT INTO country(country_id, country_name) VALUES ('US', 'United States of America');
INSERT INTO country(country_id, country_name) VALUES ('ZM', 'Zambia');
INSERT INTO country(country_id, country_name) VALUES ('ZW', 'Zimbabwe');
 
-- location
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1400, '2014 Jabberwocky Rd', '26192', 'Southlake', 'Texas', 'US');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1500, '2011 Interiors Blvd', '99236', 'South San Francisco', 'California', 'US');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1700, '2004 Charade Rd', '98199', 'Seattle', 'Washington', 'US');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1800, '147 Spadina Ave', 'M5V 2L7', 'Toronto', 'Ontario', 'CA');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (2400, '8204 Arthur St', NULL, 'London', NULL, 'UK');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (2500, 'Magdalen Centre,  The Oxford Science Park', 'OX9 9ZB', 'Oxford', 'Oxford', 'UK');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (2700, 'Schwanthalerstr. 7031', '80925', 'Munich', 'Bavaria', 'DE');
 
-- job
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (1, 'Public Accountant', 4200.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (2, 'Accounting Manager', 8200.00, 16000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (3, 'Administration Assistant', 3000.00, 6000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (4, 'President', 20000.00, 40000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (5, 'Administration Vice President', 15000.00, 30000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (6, 'Accountant', 4200.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (7, 'Finance Manager', 8200.00, 16000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (8, 'Human Resources Representative', 4000.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (9, 'Programmer', 4000.00, 10000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (10, 'Marketing Manager', 9000.00, 15000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (11, 'Marketing Representative', 4000.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (12, 'Public Relations Representative', 4500.00, 10500.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (13, 'Purchasing Clerk', 2500.00, 5500.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (14, 'Purchasing Manager', 8000.00, 15000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (15, 'Sales Manager', 10000.00, 20000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (16, 'Sales Representative', 6000.00, 12000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (17, 'Shipping Clerk', 2500.00, 5500.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (18, 'Stock Clerk', 2000.00, 5000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (19, 'Stock Manager', 5500.00, 8500.00);
 
-- department
INSERT INTO department(department_id, department_name, location_id) VALUES (1, 'Administration', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (2, 'Marketing', 1800);
INSERT INTO department(department_id, department_name, location_id) VALUES (3, 'Purchasing', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (4, 'Human Resources', 2400);
INSERT INTO department(department_id, department_name, location_id) VALUES (5, 'Shipping', 1500);
INSERT INTO department(department_id, department_name, location_id) VALUES (6, 'IT', 1400);
INSERT INTO department(department_id, department_name, location_id) VALUES (7, 'Public Relations', 2700);
INSERT INTO department(department_id, department_name, location_id) VALUES (8, 'Sales', 2500);
INSERT INTO department(department_id, department_name, location_id) VALUES (9, 'Executive', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (10, 'Finance', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (11, 'Accounting', 1700);
 
-- employee
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (100, 'Steven', 'King', 'steven.king@esmartdata.org', '515.123.4567', '1987-06-17', 4, 24000.00, 9);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (101, 'Neena', 'Kochhar', 'neena.kochhar@esmartdata.org', '515.123.4568', '1989-09-21', 5, 17000.00, 9);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (102, 'Lex', 'De Haan', 'lex.de haan@esmartdata.org', '515.123.4569', '1993-01-13', 5, 17000.00, 9);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (103, 'Alexander', 'Hunold', 'alexander.hunold@esmartdata.org', '590.423.4567', '1990-01-03', 9, 9000.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (104, 'Bruce', 'Ernst', 'bruce.ernst@esmartdata.org', '590.423.4568', '1991-05-21', 9, 6000.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (105, 'David', 'Austin', 'david.austin@esmartdata.org', '590.423.4569', '1997-06-25', 9, 4800.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (106, 'Valli', 'Pataballa', 'valli.pataballa@esmartdata.org', '590.423.4560', '1998-02-05', 9, 4800.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (107, 'Diana', 'Lorentz', 'diana.lorentz@esmartdata.org', '590.423.5567', '1999-02-07', 9, 4200.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (108, 'Nancy', 'Greenberg', 'nancy.greenberg@esmartdata.org', '515.124.4569', '1994-08-17', 7, 12000.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (109, 'Daniel', 'Faviet', 'daniel.faviet@esmartdata.org', '515.124.4169', '1994-08-16', 6, 9000.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (110, 'John', 'Chen', 'john.chen@esmartdata.org', '515.124.4269', '1997-09-28', 6, 8200.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (111, 'Ismael', 'Sciarra', 'ismael.sciarra@esmartdata.org', '515.124.4369', '1997-09-30', 6, 7700.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (112, 'Jose Manuel', 'Urman', 'jose manuel.urman@esmartdata.org', '515.124.4469', '1998-03-07', 6, 7800.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (113, 'Luis', 'Popp', 'luis.popp@esmartdata.org', '515.124.4567', '1999-12-07', 6, 6900.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (114, 'Den', 'Raphaely', 'den.raphaely@esmartdata.org', '515.127.4561', '1994-12-07', 14, 11000.00, 3);

SELECT first_name, last_name, email, salary FROM employee;
SELECT * FROM Stock ORDER BY Ticker ASC;
SELECT * FROM Stock ORDER BY Price DESC;

SELECT Ticker, FullName, Price
FROM Stock
ORDER BY Price DESC;

SELECT Ticker, Price
FROM Stock
ORDER BY FullName ASC;

SELECT *
FROM Stock
ORDER BY EPS ASC NULLS LAST;

DROP TABLE IF EXISTS Stock;

CREATE TABLE Stock (
	Id         INTEGER PRIMARY KEY,
	Ticker     TEXT    NOT NULL,
	FullName   TEXT    NOT NULL,
	TradingDay TEXT    NOT NULL,
	Price      REAL    NOT NULL CHECK (Price > 0),
	Sector     TEXT    NOT NULL,
	EPS        REAL
);

INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (1, 'AAPL', 'APPLE INC.', '2021-02-03', 134.99, 'Electronic Technology', 3.74);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (2, 'MSFT', 'MICROSOFT CORP.', '2021-02-03', 240.7, 'Technology Services', 6.78);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (3, 'AMZN', 'AMAZON COM INC', '2021-02-03', 3380.29, 'Retail Trade', 42.60);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (4, 'GOOGL', 'ALPHABET INC (GOOGLE) CLASS A', '2021-02-03', 2040.09, 'Technology Services', 59.26);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (5, 'FB', 'FACEBOOK INC', '2021-02-03', 264.88, 'Technology Services', 10.23);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (6, 'TSLA', 'TESLA INC', '2021-02-03', 864.75, 'Consumer Durables', 0.57);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (7, 'BABA', 'ALIBABA GROUP HOLDINGS LTD.', '2021-02-03', 264.70, 'Retail Trade', 8.63);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (8, 'V', 'VISA INC', '2021-02-03', 202.83, 'Finance', 4.85);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (9, 'PYPL', 'PAYPAL HOLDINGS INC', '2021-02-03', 251.93, 'Technology Services', 2.68);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (10, 'ORCL', 'ORACLE CORP', '2021-02-03', 62.26, 'Technology Services', 3.37);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (11, 'JNJ', 'JOHNSON & JOHNSON', '2021-02-03', 160.5, 'Health Technology', NULL);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (12, 'CMCSA', 'COMCAST CORP', '2021-02-03', 50.47, 'Consumer Services', NULL);

SELECT *
FROM Stock
ORDER BY CASE WHEN EPS IS NULL THEN 0 ELSE 1 END, EPS ASC;

SELECT *
FROM Stock
ORDER BY CASE WHEN EPS IS NULL THEN 1 ELSE 0 END, EPS desc;

SELECT *
FROM Stock
ORDER BY Sector ASC, Ticker ASC;

SELECT Sector, Ticker, Price
FROM Stock
ORDER BY Sector ASC, Ticker ASC;

SELECT Sector, EPS, Ticker, Price
FROM Stock
ORDER BY Sector DESC, EPS DESC;


DROP TABLE IF EXISTS employee;
DROP TABLE IF EXISTS department;
DROP TABLE IF EXISTS location;
DROP TABLE IF EXISTS country;
DROP TABLE IF EXISTS job;
 
CREATE TABLE country (
	country_id   TEXT    NOT NULL,
	country_name TEXT    NOT NULL,
	PRIMARY KEY (country_id)
);
 
CREATE TABLE location (
	location_id    INTEGER NOT NULL,
	street_address TEXT,
	postal_code    TEXT,
	city           TEXT    NOT NULL,
	state_province TEXT,
	country_id     INTEGER NOT NULL,
	PRIMARY KEY (location_id),
	FOREIGN KEY (country_id) REFERENCES country (country_id)
);
 
CREATE TABLE department (
	department_id   INTEGER NOT NULL,
	department_name TEXT    NOT NULL,
	location_id     INTEGER NOT NULL,
	PRIMARY KEY (department_id),
	FOREIGN KEY (location_id) REFERENCES location (location_id)
);
 
CREATE TABLE job (
	job_id     INTEGER NOT NULL,
	job_title  TEXT    NOT NULL,
	min_salary REAL    NOT NULL,
	max_salary REAL    NOT NULL,
	PRIMARY KEY (job_id)
);
 
CREATE TABLE employee (
	employee_id   INTEGER NOT NULL,
	first_name    TEXT,
	last_name     TEXT    NOT NULL,
	email         TEXT    NOT NULL,
	phone_number  TEXT,
	hire_date     TEXT    NOT NULL,
	job_id        INTEGER NOT NULL,
	salary        REAL    NOT NULL,
	department_id INTEGER NOT NULL,
	PRIMARY KEY (employee_id),
	FOREIGN KEY (job_id) REFERENCES job (job_id),
	FOREIGN KEY (department_id) REFERENCES department (department_id)
);
 
-- country
INSERT INTO country(country_id, country_name) VALUES ('AR', 'Argentina');
INSERT INTO country(country_id, country_name) VALUES ('AU', 'Australia');
INSERT INTO country(country_id, country_name) VALUES ('BE', 'Belgium');
INSERT INTO country(country_id, country_name) VALUES ('BR', 'Brazil');
INSERT INTO country(country_id, country_name) VALUES ('CA', 'Canada');
INSERT INTO country(country_id, country_name) VALUES ('CH', 'Switzerland');
INSERT INTO country(country_id, country_name) VALUES ('CN', 'China');
INSERT INTO country(country_id, country_name) VALUES ('DE', 'Germany');
INSERT INTO country(country_id, country_name) VALUES ('DK', 'Denmark');
INSERT INTO country(country_id, country_name) VALUES ('EG', 'Egypt');
INSERT INTO country(country_id, country_name) VALUES ('FR', 'France');
INSERT INTO country(country_id, country_name) VALUES ('HK', 'HongKong');
INSERT INTO country(country_id, country_name) VALUES ('IL', 'Israel');
INSERT INTO country(country_id, country_name) VALUES ('IN', 'India');
INSERT INTO country(country_id, country_name) VALUES ('IT', 'Italy');
INSERT INTO country(country_id, country_name) VALUES ('JP', 'Japan');
INSERT INTO country(country_id, country_name) VALUES ('KW', 'Kuwait');
INSERT INTO country(country_id, country_name) VALUES ('MX', 'Mexico');
INSERT INTO country(country_id, country_name) VALUES ('NG', 'Nigeria');
INSERT INTO country(country_id, country_name) VALUES ('NL', 'Netherlands');
INSERT INTO country(country_id, country_name) VALUES ('SG', 'Singapore');
INSERT INTO country(country_id, country_name) VALUES ('UK', 'United Kingdom');
INSERT INTO country(country_id, country_name) VALUES ('US', 'United States of America');
INSERT INTO country(country_id, country_name) VALUES ('ZM', 'Zambia');
INSERT INTO country(country_id, country_name) VALUES ('ZW', 'Zimbabwe');
 
-- location
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1400, '2014 Jabberwocky Rd', '26192', 'Southlake', 'Texas', 'US');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1500, '2011 Interiors Blvd', '99236', 'South San Francisco', 'California', 'US');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1700, '2004 Charade Rd', '98199', 'Seattle', 'Washington', 'US');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1800, '147 Spadina Ave', 'M5V 2L7', 'Toronto', 'Ontario', 'CA');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (2400, '8204 Arthur St', NULL, 'London', NULL, 'UK');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (2500, 'Magdalen Centre,  The Oxford Science Park', 'OX9 9ZB', 'Oxford', 'Oxford', 'UK');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (2700, 'Schwanthalerstr. 7031', '80925', 'Munich', 'Bavaria', 'DE');
 
-- job
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (1, 'Public Accountant', 4200.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (2, 'Accounting Manager', 8200.00, 16000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (3, 'Administration Assistant', 3000.00, 6000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (4, 'President', 20000.00, 40000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (5, 'Administration Vice President', 15000.00, 30000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (6, 'Accountant', 4200.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (7, 'Finance Manager', 8200.00, 16000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (8, 'Human Resources Representative', 4000.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (9, 'Programmer', 4000.00, 10000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (10, 'Marketing Manager', 9000.00, 15000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (11, 'Marketing Representative', 4000.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (12, 'Public Relations Representative', 4500.00, 10500.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (13, 'Purchasing Clerk', 2500.00, 5500.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (14, 'Purchasing Manager', 8000.00, 15000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (15, 'Sales Manager', 10000.00, 20000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (16, 'Sales Representative', 6000.00, 12000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (17, 'Shipping Clerk', 2500.00, 5500.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (18, 'Stock Clerk', 2000.00, 5000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (19, 'Stock Manager', 5500.00, 8500.00);
 
-- department
INSERT INTO department(department_id, department_name, location_id) VALUES (1, 'Administration', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (2, 'Marketing', 1800);
INSERT INTO department(department_id, department_name, location_id) VALUES (3, 'Purchasing', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (4, 'Human Resources', 2400);
INSERT INTO department(department_id, department_name, location_id) VALUES (5, 'Shipping', 1500);
INSERT INTO department(department_id, department_name, location_id) VALUES (6, 'IT', 1400);
INSERT INTO department(department_id, department_name, location_id) VALUES (7, 'Public Relations', 2700);
INSERT INTO department(department_id, department_name, location_id) VALUES (8, 'Sales', 2500);
INSERT INTO department(department_id, department_name, location_id) VALUES (9, 'Executive', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (10, 'Finance', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (11, 'Accounting', 1700);
 
-- employee
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (100, 'Steven', 'King', 'steven.king@esmartdata.org', '515.123.4567', '1987-06-17', 4, 24000.00, 9);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (101, 'Neena', 'Kochhar', 'neena.kochhar@esmartdata.org', '515.123.4568', '1989-09-21', 5, 17000.00, 9);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (102, 'Lex', 'De Haan', 'lex.de haan@esmartdata.org', '515.123.4569', '1993-01-13', 5, 17000.00, 9);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (103, 'Alexander', 'Hunold', 'alexander.hunold@esmartdata.org', '590.423.4567', '1990-01-03', 9, 9000.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (104, 'Bruce', 'Ernst', 'bruce.ernst@esmartdata.org', '590.423.4568', '1991-05-21', 9, 6000.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (105, 'David', 'Austin', 'david.austin@esmartdata.org', '590.423.4569', '1997-06-25', 9, 4800.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (106, 'Valli', 'Pataballa', 'valli.pataballa@esmartdata.org', '590.423.4560', '1998-02-05', 9, 4800.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (107, 'Diana', 'Lorentz', 'diana.lorentz@esmartdata.org', '590.423.5567', '1999-02-07', 9, 4200.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (108, 'Nancy', 'Greenberg', 'nancy.greenberg@esmartdata.org', '515.124.4569', '1994-08-17', 7, 12000.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (109, 'Daniel', 'Faviet', 'daniel.faviet@esmartdata.org', '515.124.4169', '1994-08-16', 6, 9000.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (110, 'John', 'Chen', 'john.chen@esmartdata.org', '515.124.4269', '1997-09-28', 6, 8200.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (111, 'Ismael', 'Sciarra', 'ismael.sciarra@esmartdata.org', '515.124.4369', '1997-09-30', 6, 7700.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (112, 'Jose Manuel', 'Urman', 'jose manuel.urman@esmartdata.org', '515.124.4469', '1998-03-07', 6, 7800.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (113, 'Luis', 'Popp', 'luis.popp@esmartdata.org', '515.124.4567', '1999-12-07', 6, 6900.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (114, 'Den', 'Raphaely', 'den.raphaely@esmartdata.org', '515.127.4561', '1994-12-07', 14, 11000.00, 3);


SELECT first_name, last_name, email, salary
FROM employee
ORDER BY salary DESC;

SELECT first_name, last_name, email, salary
FROM employee
ORDER BY first_name ASC, last_name ASC;

SELECT department_id, email, salary
FROM employee
ORDER BY department_id ASC, salary DESC;

SELECT *,
       (max_salary - min_salary) AS diff_salary
FROM job
ORDER BY diff_salary DESC;

DROP TABLE IF EXISTS Stock;
 
CREATE TABLE Stock (
	Id         INTEGER PRIMARY KEY,
	Ticker     TEXT    NOT NULL,
	FullName   TEXT    NOT NULL,
	TradingDay TEXT    NOT NULL,
	Price      REAL    NOT NULL CHECK (Price > 0),
	Sector     TEXT    NOT NULL,
	EPS        REAL
);
 
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (1, 'AAPL', 'APPLE INC.', '2021-02-03', 134.99, 'Electronic Technology', 3.74);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (2, 'MSFT', 'MICROSOFT CORP.', '2021-02-03', 240.7, 'Technology Services', 6.78);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (3, 'AMZN', 'AMAZON COM INC', '2021-02-03', 3380.29, 'Retail Trade', 42.60);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (4, 'GOOGL', 'ALPHABET INC (GOOGLE) CLASS A', '2021-02-03', 2040.09, 'Technology Services', 59.26);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (5, 'FB', 'FACEBOOK INC', '2021-02-03', 264.88, 'Technology Services', 10.23);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (6, 'TSLA', 'TESLA INC', '2021-02-03', 864.75, 'Consumer Durables', 0.57);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (7, 'BABA', 'ALIBABA GROUP HOLDINGS LTD.', '2021-02-03', 264.70, 'Retail Trade', 8.63);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (8, 'V', 'VISA INC', '2021-02-03', 202.83, 'Finance', 4.85);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (9, 'PYPL', 'PAYPAL HOLDINGS INC', '2021-02-03', 251.93, 'Technology Services', 2.68);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (10, 'ORCL', 'ORACLE CORP', '2021-02-03', 62.26, 'Technology Services', 3.37);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (11, 'JNJ', 'JOHNSON & JOHNSON', '2021-02-03', 160.5, 'Health Technology', NULL);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (12, 'CMCSA', 'COMCAST CORP', '2021-02-03', 50.47, 'Consumer Services', NULL);


SELECT * FROM Stock
LIMIT 5;

SELECT * FROM Stock
ORDER BY Price DESC
LIMIT 5;

SELECT * FROM Stock
ORDER BY EPS DESC
LIMIT 3;


SELECT Sector, FullName, Price
FROM Stock
ORDER BY Sector DESC
LIMIT 5;

SELECT *
FROM Stock
LIMIT 5 OFFSET 3;

SELECT Ticker, Price, EPS
FROM Stock
ORDER BY EPS DESC
LIMIT 5 OFFSET 3;

SELECT *
FROM Stock
ORDER BY EPS DESC
LIMIT 1 OFFSET 2;

SELECT *
FROM Stock
ORDER BY Price ASC
LIMIT 1 OFFSET 1;


DROP TABLE IF EXISTS employee;
DROP TABLE IF EXISTS department;
DROP TABLE IF EXISTS location;
DROP TABLE IF EXISTS country;
DROP TABLE IF EXISTS job;
 
CREATE TABLE country (
	country_id   TEXT    NOT NULL,
	country_name TEXT    NOT NULL,
	PRIMARY KEY (country_id)
);
 
CREATE TABLE location (
	location_id    INTEGER NOT NULL,
	street_address TEXT,
	postal_code    TEXT,
	city           TEXT    NOT NULL,
	state_province TEXT,
	country_id     INTEGER NOT NULL,
	PRIMARY KEY (location_id),
	FOREIGN KEY (country_id) REFERENCES country (country_id)
);
 
CREATE TABLE department (
	department_id   INTEGER NOT NULL,
	department_name TEXT    NOT NULL,
	location_id     INTEGER NOT NULL,
	PRIMARY KEY (department_id),
	FOREIGN KEY (location_id) REFERENCES location (location_id)
);
 
CREATE TABLE job (
	job_id     INTEGER NOT NULL,
	job_title  TEXT    NOT NULL,
	min_salary REAL    NOT NULL,
	max_salary REAL    NOT NULL,
	PRIMARY KEY (job_id)
);
 
CREATE TABLE employee (
	employee_id   INTEGER NOT NULL,
	first_name    TEXT,
	last_name     TEXT    NOT NULL,
	email         TEXT    NOT NULL,
	phone_number  TEXT,
	hire_date     TEXT    NOT NULL,
	job_id        INTEGER NOT NULL,
	salary        REAL    NOT NULL,
	department_id INTEGER NOT NULL,
	PRIMARY KEY (employee_id),
	FOREIGN KEY (job_id) REFERENCES job (job_id),
	FOREIGN KEY (department_id) REFERENCES department (department_id)
);
 
-- country
INSERT INTO country(country_id, country_name) VALUES ('AR', 'Argentina');
INSERT INTO country(country_id, country_name) VALUES ('AU', 'Australia');
INSERT INTO country(country_id, country_name) VALUES ('BE', 'Belgium');
INSERT INTO country(country_id, country_name) VALUES ('BR', 'Brazil');
INSERT INTO country(country_id, country_name) VALUES ('CA', 'Canada');
INSERT INTO country(country_id, country_name) VALUES ('CH', 'Switzerland');
INSERT INTO country(country_id, country_name) VALUES ('CN', 'China');
INSERT INTO country(country_id, country_name) VALUES ('DE', 'Germany');
INSERT INTO country(country_id, country_name) VALUES ('DK', 'Denmark');
INSERT INTO country(country_id, country_name) VALUES ('EG', 'Egypt');
INSERT INTO country(country_id, country_name) VALUES ('FR', 'France');
INSERT INTO country(country_id, country_name) VALUES ('HK', 'HongKong');
INSERT INTO country(country_id, country_name) VALUES ('IL', 'Israel');
INSERT INTO country(country_id, country_name) VALUES ('IN', 'India');
INSERT INTO country(country_id, country_name) VALUES ('IT', 'Italy');
INSERT INTO country(country_id, country_name) VALUES ('JP', 'Japan');
INSERT INTO country(country_id, country_name) VALUES ('KW', 'Kuwait');
INSERT INTO country(country_id, country_name) VALUES ('MX', 'Mexico');
INSERT INTO country(country_id, country_name) VALUES ('NG', 'Nigeria');
INSERT INTO country(country_id, country_name) VALUES ('NL', 'Netherlands');
INSERT INTO country(country_id, country_name) VALUES ('SG', 'Singapore');
INSERT INTO country(country_id, country_name) VALUES ('UK', 'United Kingdom');
INSERT INTO country(country_id, country_name) VALUES ('US', 'United States of America');
INSERT INTO country(country_id, country_name) VALUES ('ZM', 'Zambia');
INSERT INTO country(country_id, country_name) VALUES ('ZW', 'Zimbabwe');
 
-- location
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1400, '2014 Jabberwocky Rd', '26192', 'Southlake', 'Texas', 'US');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1500, '2011 Interiors Blvd', '99236', 'South San Francisco', 'California', 'US');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1700, '2004 Charade Rd', '98199', 'Seattle', 'Washington', 'US');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (1800, '147 Spadina Ave', 'M5V 2L7', 'Toronto', 'Ontario', 'CA');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (2400, '8204 Arthur St', NULL, 'London', NULL, 'UK');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (2500, 'Magdalen Centre,  The Oxford Science Park', 'OX9 9ZB', 'Oxford', 'Oxford', 'UK');
INSERT INTO location(location_id, street_address, postal_code, city, state_province, country_id) VALUES (2700, 'Schwanthalerstr. 7031', '80925', 'Munich', 'Bavaria', 'DE');
 
-- job
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (1, 'Public Accountant', 4200.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (2, 'Accounting Manager', 8200.00, 16000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (3, 'Administration Assistant', 3000.00, 6000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (4, 'President', 20000.00, 40000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (5, 'Administration Vice President', 15000.00, 30000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (6, 'Accountant', 4200.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (7, 'Finance Manager', 8200.00, 16000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (8, 'Human Resources Representative', 4000.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (9, 'Programmer', 4000.00, 10000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (10, 'Marketing Manager', 9000.00, 15000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (11, 'Marketing Representative', 4000.00, 9000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (12, 'Public Relations Representative', 4500.00, 10500.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (13, 'Purchasing Clerk', 2500.00, 5500.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (14, 'Purchasing Manager', 8000.00, 15000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (15, 'Sales Manager', 10000.00, 20000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (16, 'Sales Representative', 6000.00, 12000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (17, 'Shipping Clerk', 2500.00, 5500.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (18, 'Stock Clerk', 2000.00, 5000.00);
INSERT INTO job(job_id, job_title, min_salary, max_salary) VALUES (19, 'Stock Manager', 5500.00, 8500.00);
 
-- department
INSERT INTO department(department_id, department_name, location_id) VALUES (1, 'Administration', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (2, 'Marketing', 1800);
INSERT INTO department(department_id, department_name, location_id) VALUES (3, 'Purchasing', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (4, 'Human Resources', 2400);
INSERT INTO department(department_id, department_name, location_id) VALUES (5, 'Shipping', 1500);
INSERT INTO department(department_id, department_name, location_id) VALUES (6, 'IT', 1400);
INSERT INTO department(department_id, department_name, location_id) VALUES (7, 'Public Relations', 2700);
INSERT INTO department(department_id, department_name, location_id) VALUES (8, 'Sales', 2500);
INSERT INTO department(department_id, department_name, location_id) VALUES (9, 'Executive', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (10, 'Finance', 1700);
INSERT INTO department(department_id, department_name, location_id) VALUES (11, 'Accounting', 1700);
 
-- employee
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (100, 'Steven', 'King', 'steven.king@esmartdata.org', '515.123.4567', '1987-06-17', 4, 24000.00, 9);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (101, 'Neena', 'Kochhar', 'neena.kochhar@esmartdata.org', '515.123.4568', '1989-09-21', 5, 17000.00, 9);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (102, 'Lex', 'De Haan', 'lex.de haan@esmartdata.org', '515.123.4569', '1993-01-13', 5, 17000.00, 9);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (103, 'Alexander', 'Hunold', 'alexander.hunold@esmartdata.org', '590.423.4567', '1990-01-03', 9, 9000.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (104, 'Bruce', 'Ernst', 'bruce.ernst@esmartdata.org', '590.423.4568', '1991-05-21', 9, 6000.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (105, 'David', 'Austin', 'david.austin@esmartdata.org', '590.423.4569', '1997-06-25', 9, 4800.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (106, 'Valli', 'Pataballa', 'valli.pataballa@esmartdata.org', '590.423.4560', '1998-02-05', 9, 4800.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (107, 'Diana', 'Lorentz', 'diana.lorentz@esmartdata.org', '590.423.5567', '1999-02-07', 9, 4200.00, 6);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (108, 'Nancy', 'Greenberg', 'nancy.greenberg@esmartdata.org', '515.124.4569', '1994-08-17', 7, 12000.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (109, 'Daniel', 'Faviet', 'daniel.faviet@esmartdata.org', '515.124.4169', '1994-08-16', 6, 9000.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (110, 'John', 'Chen', 'john.chen@esmartdata.org', '515.124.4269', '1997-09-28', 6, 8200.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (111, 'Ismael', 'Sciarra', 'ismael.sciarra@esmartdata.org', '515.124.4369', '1997-09-30', 6, 7700.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (112, 'Jose Manuel', 'Urman', 'jose manuel.urman@esmartdata.org', '515.124.4469', '1998-03-07', 6, 7800.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (113, 'Luis', 'Popp', 'luis.popp@esmartdata.org', '515.124.4567', '1999-12-07', 6, 6900.00, 10);
INSERT INTO employee(employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, department_id) VALUES (114, 'Den', 'Raphaely', 'den.raphaely@esmartdata.org', '515.127.4561', '1994-12-07', 14, 11000.00, 3);


SELECT *
FROM job
LIMIT 10;

SELECT *
FROM job
ORDER BY max_salary DESC
LIMIT 5;

SELECT *,
       (min_salary + max_salary) / 2 AS avg_salary
FROM job
ORDER BY avg_salary DESC
LIMIT 5;

SELECT * FROM (
    SELECT *,
           (min_salary + max_salary) / 2.0 AS avg_salary
    FROM job
) AS subquery ORDER BY avg_salary DESC
LIMIT 1 OFFSET 3;


DROP TABLE IF EXISTS Stock;
 
CREATE TABLE Stock (
	Id         INTEGER PRIMARY KEY,
	Ticker     TEXT    NOT NULL,
	FullName   TEXT    NOT NULL,
	TradingDay TEXT    NOT NULL,
	Price      REAL    NOT NULL CHECK (Price > 0),
	Sector     TEXT    NOT NULL,
	EPS        REAL
);
 
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (1, 'AAPL', 'APPLE INC.', '2021-02-03', 134.99, 'Electronic Technology', 3.74);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (2, 'MSFT', 'MICROSOFT CORP.', '2021-02-03', 240.7, 'Technology Services', 6.78);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (3, 'AMZN', 'AMAZON COM INC', '2021-02-03', 3380.29, 'Retail Trade', 42.60);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (4, 'GOOGL', 'ALPHABET INC (GOOGLE) CLASS A', '2021-02-03', 2040.09, 'Technology Services', 59.26);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (5, 'FB', 'FACEBOOK INC', '2021-02-03', 264.88, 'Technology Services', 10.23);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (6, 'TSLA', 'TESLA INC', '2021-02-03', 864.75, 'Consumer Durables', 0.57);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (7, 'BABA', 'ALIBABA GROUP HOLDINGS LTD.', '2021-02-03', 264.70, 'Retail Trade', 8.63);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (8, 'V', 'VISA INC', '2021-02-03', 202.83, 'Finance', 4.85);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (9, 'PYPL', 'PAYPAL HOLDINGS INC', '2021-02-03', 251.93, 'Technology Services', 2.68);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (10, 'ORCL', 'ORACLE CORP', '2021-02-03', 62.26, 'Technology Services', 3.37);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (11, 'JNJ', 'JOHNSON & JOHNSON', '2021-02-03', 160.5, 'Health Technology', NULL);
INSERT INTO Stock (Id, Ticker, FullName, TradingDay, Price, Sector, EPS) 
VALUES (12, 'CMCSA', 'COMCAST CORP', '2021-02-03', 50.47, 'Consumer Services', NULL);


SELECT DISTINCT Sector FROM Stock;

SELECT DISTINCT first_name
FROM employee;

SELECT COUNT(DISTINCT first_name) AS unique_first_name
FROM employee;

SELECT *
FROM Stock
WHERE Ticker = 'TSLA';

SELECT *
FROM Stock
WHERE Ticker IN ('TSLA', 'AMZN');

SELECT * FROM Stock WHERE Ticker == 'TSLA' OR Ticker == 'AMZN';

SELECT *
FROM Stock
WHERE Ticker IN ('TSLA', 'AMZN', 'MSFT');

SELECT *
FROM Stock
WHERE Price > 250;

SELECT *
FROM Stock
WHERE Price < 100 OR Price > 1000;

SELECT *
FROM Stock
WHERE Price < 500 AND EPS > 5;

SELECT *
FROM Stock
WHERE Id <> 7;

SELECT *
FROM Stock
WHERE Price BETWEEN 100 AND 300;

SELECT *
FROM Stock
WHERE Price NOT BETWEEN 100 AND 300;

SELECT *
FROM Stock
WHERE Ticker NOT IN ('V', 'FB', 'PYPL');

SELECT *
FROM Stock
WHERE EPS IS NULL;

SELECT *
FROM Stock
WHERE FullName LIKE 'A%';

SELECT *
FROM Stock
WHERE LENGTH(Ticker) = 4;

SELECT *
FROM Stock
WHERE FullName LIKE '%INC%';

SELECT *
FROM Stock
WHERE FullName LIKE '%INC%'
  AND LENGTH(Ticker) = 4;

SELECT *
FROM Stock
WHERE FullName NOT LIKE '%CORP%';

SELECT *
FROM Stock
WHERE Sector LIKE '%TECH%'
  AND EPS > 5;

SELECT job_title
FROM job
WHERE min_salary >= 9000;

SELECT job_title
FROM job
WHERE min_salary BETWEEN 5000 AND 8000;

SELECT *
FROM employee
WHERE hire_date = '1999-12-07';

SELECT *
FROM employee
WHERE employee_id IN (101, 106, 109);

SELECT COUNT(*) 
FROM Stock;

SELECT COUNT(EPS) AS NonMissingEPS
FROM Stock
WHERE EPS IS NOT NULL;

SELECT COUNT(CASE WHEN EPS IS NULL THEN 1 END) AS MissingEPS
FROM Stock;

SELECT COUNT(DISTINCT Sector) AS NumberOfSectors
FROM Stock;

SELECT AVG(Price) AS AvgPrice
FROM Stock;

SELECT AVG(Price) AS AvgPrice
FROM Stock;

SELECT MIN(EPS) AS MinEPS, MAX(EPS) AS MaxEPS
FROM Stock;

SELECT Id,
       Ticker,
       FullName,
       LENGTH(Ticker) AS TickerLength
FROM Stock;

SELECT Sector,
       COUNT(*) AS NumOfStocks
FROM Stock
GROUP BY Sector;

SELECT Sector,
       COUNT(*) AS NumOfStocks
FROM Stock
GROUP BY Sector
ORDER BY NumOfStocks DESC;

SELECT Sector,
       AVG(EPS) AS AvgEPSPerSector
FROM Stock
GROUP BY Sector
ORDER BY AvgEPSPerSector DESC;

SELECT department_id,
       COUNT(*) AS number_of_employees
FROM employee
GROUP BY department_id
ORDER BY number_of_employees DESC;

SELECT job_id,
       AVG(salary) AS avg_salary
FROM employee
GROUP BY job_id
ORDER BY avg_salary DESC;


DROP TABLE IF EXISTS sale;
DROP TABLE IF EXISTS product;
DROP TABLE IF EXISTS category;
DROP TABLE IF EXISTS brand;
 
CREATE TABLE category (
	category_id   INTEGER NOT NULL,
	category_name TEXT    NOT NULL,
	PRIMARY KEY (category_id)
);
 
CREATE TABLE brand (
	brand_id   INTEGER NOT NULL,
	brand_name TEXT    NOT NULL,
	PRIMARY KEY (brand_id)
);
 
CREATE TABLE product (
	product_id   INTEGER NOT NULL,
	product_name TEXT    NOT NULL,
	brand_id     INTEGER NOT NULL,
	category_id  INTEGER,
	model_year   INTEGER NOT NULL,
	list_price   REAL    NOT NULL,
	PRIMARY KEY (product_id),
	FOREIGN KEY (category_id) REFERENCES category (category_id),
	FOREIGN KEY (brand_id) REFERENCES brand (brand_id)
);
 
CREATE TABLE sale (
	order_id   INTEGER NOT NULL,
	product_id INTEGER NOT NULL,
	quantity   INTEGER NOT NULL,
	PRIMARY KEY (order_id),
	FOREIGN KEY (product_id) REFERENCES product (product_id)
);
 
-- category
INSERT INTO category (category_id, category_name) VALUES (1, 'Children Bicycles');
INSERT INTO category (category_id, category_name) VALUES (2, 'Comfort Bicycles');
INSERT INTO category (category_id, category_name) VALUES (3, 'Cruisers Bicycles');
INSERT INTO category (category_id, category_name) VALUES (4, 'Cyclocross Bicycles');
INSERT INTO category (category_id, category_name) VALUES (5, 'Electric Bikes');
INSERT INTO category (category_id, category_name) VALUES (6, 'Mountain Bikes');
INSERT INTO category (category_id, category_name) VALUES (7, 'Road Bikes');
 
-- brand 
INSERT INTO brand (brand_id, brand_name) VALUES (1, 'Electra');
INSERT INTO brand (brand_id, brand_name) VALUES (2, 'Haro');
INSERT INTO brand (brand_id, brand_name) VALUES (3, 'Heller');
INSERT INTO brand (brand_id, brand_name) VALUES (4, 'Pure Cycles');
INSERT INTO brand (brand_id, brand_name) VALUES (5, 'Ritchey');
INSERT INTO brand (brand_id, brand_name) VALUES (6, 'Strider');
INSERT INTO brand (brand_id, brand_name) VALUES (7, 'Sun Bicycles');
INSERT INTO brand (brand_id, brand_name) VALUES (8, 'Surly');
INSERT INTO brand (brand_id, brand_name) VALUES (9, 'Trek');
 
-- product
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (1, 'Trek 820 - 2021', 9, 6, 2021, 379.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (2, 'Ritchey Timberwolf Frameset - 2021', 5, 6, 2021, 749.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (3, 'Surly Wednesday Frameset - 2021', 8, 6, 2021, 999.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (4, 'Trek Fuel EX 8 29 - 2021', 9, 6, 2021, 2899.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (5, 'Heller Shagamaw Frame - 2021', 3, 6, 2021, 1320.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (6, 'Surly Ice Cream Truck Frameset - 2021', 8, 6, 2021, 469.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (7, 'Trek Slash 8 27.5 - 2021', 9, 6, 2021, 3999.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (8, 'Trek Remedy 29 Carbon Frameset - 2021', 9, 6, 2021, 1799.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (9, 'Trek Conduit+ - 2021', 9, 5, 2021, 2999.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (10, 'Surly Straggler - 2021', 8, 4, 2021, 1549);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (11, 'Surly Straggler 650b - 2021', 8, 4, 2021, 1680.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (12, 'Electra Townie Original 21D - 2021', 1, 3, 2021, 549.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (13, 'Electra Cruiser 1 (24-Inch) - 2021', 1, 3, 2021, 269.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (14, 'Electra Girl''s Hawaii 1 (16-inch) - 2020/2021', 1, 3, 2021, 269.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (15, 'Electra Moto 1 - 2021', 1, 3, 2021, 529.99);
 
-- sale
INSERT INTO sale (order_id, product_id, quantity) VALUES (1, 3, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (2, 12, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (3, 1, 2);
INSERT INTO sale (order_id, product_id, quantity) VALUES (4, 4, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (5, 8, 3);
INSERT INTO sale (order_id, product_id, quantity) VALUES (6, 9, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (7, 5, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (8, 6, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (9, 10, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (10, 1, 2);
INSERT INTO sale (order_id, product_id, quantity) VALUES (11, 2, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (12, 7, 3);
INSERT INTO sale (order_id, product_id, quantity) VALUES (13, 8, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (14, 5, 2);
INSERT INTO sale (order_id, product_id, quantity) VALUES (15, 11, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (16, 4, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (17, 2, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (18, 8, 1);
INSERT INTO sale (order_id, product_id, quantity) VALUES (19, 10, 2);
INSERT INTO sale (order_id, product_id, quantity) VALUES (20, 11, 1);

SELECT product_id,
       COUNT(*) AS number_of_orders
FROM sale
GROUP BY product_id;

SELECT product_id,
       COUNT(*) AS number_of_orders
FROM sale
GROUP BY product_id
ORDER BY number_of_orders DESC
LIMIT 3;

SELECT Sector,
       AVG(EPS) AS AvgEPSPerSector
FROM Stock
GROUP BY Sector
HAVING AVG(EPS) > 10
ORDER BY AvgEPSPerSector DESC;

SELECT job_id,
       AVG(salary) AS avg_salary
FROM employee
GROUP BY job_id
HAVING AVG(salary) > 10000
ORDER BY avg_salary DESC;

SELECT product_id,
       COUNT(*) AS number_of_orders
FROM sale
GROUP BY product_id
HAVING COUNT(*) > 1
ORDER BY number_of_orders DESC;

SELECT *,
       CASE 
           WHEN Sector LIKE '%Technology%' THEN 'TECH'
           ELSE 'NON-TECH'
       END AS TechFlag
FROM Stock;


SELECT job_id,
       AVG(salary) AS avg_salary
FROM employee
GROUP BY job_id
HAVING AVG(salary) BETWEEN 10000 AND 20000
ORDER BY avg_salary DESC;


SELECT *,
       CASE 
           WHEN EPS IS NULL THEN NULL
           WHEN EPS < 5 THEN 'low'
           WHEN EPS >= 5 AND EPS < 10 THEN 'medium'
           WHEN EPS >= 10 THEN 'high'
       END AS EPSLevel
FROM Stock;

SELECT country_id,
       country_name,
       CASE 
           WHEN country_name IN ('China', 'HongKong', 'Israel', 'India', 'Japan', 'Kuwait', 'Singapore') THEN 1
           ELSE 0
       END AS is_asia
FROM country;

SELECT d.department_name
FROM department d
WHERE d.department_id IN (
    SELECT e.department_id
    FROM employee e
    WHERE e.salary > 10000
);

SELECT job_title
FROM job
WHERE job_id IN (
    SELECT e.job_id
    FROM employee e
    WHERE e.salary > 10000
);

WITH OrderCounts AS (
    SELECT product_id,
           COUNT(*) AS number_of_orders
    FROM sale
    GROUP BY product_id
)

SELECT product_id
FROM OrderCounts
ORDER BY number_of_orders DESC
LIMIT 3;

SELECT p.*
FROM product p
WHERE p.product_id IN (
    SELECT product_id
    FROM (
        SELECT product_id, COUNT(*) AS number_of_orders
        FROM sale
        GROUP BY product_id
        ORDER BY number_of_orders DESC
        LIMIT 3
    ) AS top_products
);

SELECT product_id,
       COUNT(*) AS number_of_orders
FROM sale
GROUP BY product_id
HAVING COUNT(*) = 1;

SELECT p.*
FROM product p
WHERE p.product_id IN (
    SELECT s.product_id
    FROM sale s
    GROUP BY s.product_id
    HAVING COUNT(*) = 1
);

SELECT product_name, list_price
FROM product 
WHERE product_id IN
    (SELECT product_id
     FROM sale
     GROUP BY product_id
     HAVING COUNT(*) = 1);

SELECT *
FROM department
LEFT JOIN location
ON department.location_id = location.location_id;

SELECT department.department_id,
       department.department_name,
       location.street_address,
       location.city
FROM department
LEFT JOIN location
ON department.location_id = location.location_id;

SELECT *
FROM department
LEFT JOIN location ON department.location_id = location.location_id
LEFT JOIN country ON location.country_id = country.country_id;

SELECT 
    d.department_id,
    d.department_name,
    l.street_address,
    l.city,
    c.country_name
FROM 
    department d
LEFT JOIN 
    location l ON d.location_id = l.location_id
LEFT JOIN 
    country c ON l.country_id = c.country_id;
    
SELECT 
    e.*, 
    j.*
FROM 
    employee e
LEFT JOIN 
    job j ON e.job_id = j.job_id;

SELECT 
    e.employee_id,
    e.email,
    e.salary,
    j.job_title
FROM 
    employee e
LEFT JOIN 
    job j ON e.job_id = j.job_id;
    
SELECT t1.employee_id,
       t1.email,
       t1.salary,
       t2.job_title 
FROM employee AS t1
LEFT JOIN job AS t2 ON t1.job_id = t2.job_id
WHERE t1.salary > 8000
ORDER BY t1.salary DESC;

SELECT t1.employee_id,
       t1.email,
       t1.salary,
       t2.job_title,
       t3.department_name
FROM employee AS t1
LEFT JOIN job AS t2 ON t1.job_id = t2.job_id
LEFT JOIN department AS t3 ON t1.department_id = t3.department_id;

SELECT t3.department_name,
       COUNT(t1.employee_id) AS number_of_employees
FROM employee AS t1
LEFT JOIN department AS t3 ON t1.department_id = t3.department_id
GROUP BY t3.department_name
ORDER BY number_of_employees DESC;

SELECT t2.job_title,
       COUNT(t1.employee_id) AS number_of_employees,
       AVG(t1.salary) AS avg_salary
FROM employee AS t1
LEFT JOIN job AS t2 ON t1.job_id = t2.job_id
GROUP BY t2.job_title
ORDER BY avg_salary DESC;

SELECT *
FROM location AS l
LEFT JOIN country AS c ON l.country_id = c.country_id;

SELECT l.location_id,
       l.street_address,
       l.city,
       c.country_name
FROM location AS l
LEFT JOIN country AS c ON l.country_id = c.country_id
ORDER BY c.country_name ASC;

SELECT *
FROM product AS p
INNER JOIN category AS c ON p.category_id = c.category_id;

SELECT p.product_id,
       p.product_name,
       p.list_price,
       c.category_name
FROM product AS p
INNER JOIN category AS c ON p.category_id = c.category_id;

SELECT t2.category_name,
       COUNT(t1.product_id) AS number_of_products
FROM product AS t1
INNER JOIN category AS t2 ON t1.category_id = t2.category_id
GROUP BY t2.category_name
ORDER BY number_of_products DESC;

DROP TABLE IF EXISTS order_01_2021;
DROP TABLE IF EXISTS order_02_2021;
DROP TABLE IF EXISTS product;
DROP TABLE IF EXISTS category;
DROP TABLE IF EXISTS brand;

CREATE TABLE category (
	category_id   INTEGER NOT NULL,
	category_name TEXT    NOT NULL,
	PRIMARY KEY (category_id)
);

CREATE TABLE brand (
	brand_id   INTEGER NOT NULL,
	brand_name TEXT    NOT NULL,
	PRIMARY KEY (brand_id)
);

CREATE TABLE product (
	product_id   INTEGER NOT NULL,
	product_name TEXT    NOT NULL,
	brand_id     INTEGER NOT NULL,
	category_id  INTEGER,
	model_year   INTEGER NOT NULL,
	list_price   REAL    NOT NULL,
	PRIMARY KEY (product_id),
	FOREIGN KEY (category_id) REFERENCES category (category_id),
	FOREIGN KEY (brand_id) REFERENCES brand (brand_id)
);

CREATE TABLE order_01_2021 (
	order_id   INTEGER NOT NULL,
	product_id INTEGER NOT NULL,
	quantity   INTEGER NOT NULL,
	PRIMARY KEY (order_id),
	FOREIGN KEY (product_id) REFERENCES product (product_id)
);

CREATE TABLE order_02_2021 (
	order_id   INTEGER NOT NULL,
	product_id INTEGER NOT NULL,
	quantity   INTEGER NOT NULL,
	PRIMARY KEY (order_id),
	FOREIGN KEY (product_id) REFERENCES product (product_id)
);

-- category
INSERT INTO category (category_id, category_name) VALUES (1, 'Children Bicycles');
INSERT INTO category (category_id, category_name) VALUES (2, 'Comfort Bicycles');
INSERT INTO category (category_id, category_name) VALUES (3, 'Cruisers Bicycles');
INSERT INTO category (category_id, category_name) VALUES (4, 'Cyclocross Bicycles');
INSERT INTO category (category_id, category_name) VALUES (5, 'Electric Bikes');
INSERT INTO category (category_id, category_name) VALUES (6, 'Mountain Bikes');
INSERT INTO category (category_id, category_name) VALUES (7, 'Road Bikes');

-- brand 
INSERT INTO brand (brand_id, brand_name) VALUES (1, 'Electra');
INSERT INTO brand (brand_id, brand_name) VALUES (2, 'Haro');
INSERT INTO brand (brand_id, brand_name) VALUES (3, 'Heller');
INSERT INTO brand (brand_id, brand_name) VALUES (4, 'Pure Cycles');
INSERT INTO brand (brand_id, brand_name) VALUES (5, 'Ritchey');
INSERT INTO brand (brand_id, brand_name) VALUES (6, 'Strider');
INSERT INTO brand (brand_id, brand_name) VALUES (7, 'Sun Bicycles');
INSERT INTO brand (brand_id, brand_name) VALUES (8, 'Surly');
INSERT INTO brand (brand_id, brand_name) VALUES (9, 'Trek');

-- product
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (1, 'Trek 820 - 2021', 9, 6, 2021, 379.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (2, 'Ritchey Timberwolf Frameset - 2021', 5, 6, 2021, 749.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (3, 'Surly Wednesday Frameset - 2021', 8, 6, 2021, 999.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (4, 'Trek Fuel EX 8 29 - 2021', 9, 6, 2021, 2899.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (5, 'Heller Shagamaw Frame - 2021', 3, 6, 2021, 1320.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (6, 'Surly Ice Cream Truck Frameset - 2021', 8, 6, 2021, 469.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (7, 'Trek Slash 8 27.5 - 2021', 9, 6, 2021, 3999.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (8, 'Trek Remedy 29 Carbon Frameset - 2021', 9, 6, 2021, 1799.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (9, 'Trek Conduit+ - 2021', 9, 5, 2021, 2999.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (10, 'Surly Straggler - 2021', 8, 4, 2021, 1549);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (11, 'Surly Straggler 650b - 2021', 8, 4, 2021, 1680.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (12, 'Electra Townie Original 21D - 2021', 1, 3, 2021, 549.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (13, 'Electra Cruiser 1 (24-Inch) - 2021', 1, 3, 2021, 269.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (14, 'Electra Girl''s Hawaii 1 (16-inch) - 2020/2021', 1, 3, 2021, 269.99);
INSERT INTO product (product_id, product_name, brand_id, category_id, model_year, list_price) VALUES (15, 'Electra Moto 1 - 2021', 1, 3, 2021, 529.99);

-- order_01_2021
INSERT INTO order_01_2021 (order_id, product_id, quantity) VALUES (1, 3, 1);
INSERT INTO order_01_2021 (order_id, product_id, quantity) VALUES (2, 12, 1);
INSERT INTO order_01_2021 (order_id, product_id, quantity) VALUES (3, 1, 2);
INSERT INTO order_01_2021 (order_id, product_id, quantity) VALUES (4, 4, 1);
INSERT INTO order_01_2021 (order_id, product_id, quantity) VALUES (5, 8, 3);
INSERT INTO order_01_2021 (order_id, product_id, quantity) VALUES (6, 9, 1);
INSERT INTO order_01_2021 (order_id, product_id, quantity) VALUES (7, 5, 1);

-- order_02_2021
INSERT INTO order_02_2021 (order_id, product_id, quantity) VALUES (1, 6, 1);
INSERT INTO order_02_2021 (order_id, product_id, quantity) VALUES (2, 10, 1);
INSERT INTO order_02_2021 (order_id, product_id, quantity) VALUES (3, 1, 2);
INSERT INTO order_02_2021 (order_id, product_id, quantity) VALUES (4, 2, 1);
INSERT INTO order_02_2021 (order_id, product_id, quantity) VALUES (5, 7, 3);
INSERT INTO order_02_2021 (order_id, product_id, quantity) VALUES (6, 8, 1);
INSERT INTO order_02_2021 (order_id, product_id, quantity) VALUES (7, 5, 2);
INSERT INTO order_02_2021 (order_id, product_id, quantity) VALUES (9, 11, 1);
INSERT INTO order_02_2021 (order_id, product_id, quantity) VALUES (10, 9, 1);

SELECT 
    o.quantity,
    p.list_price,
    (o.quantity * p.list_price) AS total_price
FROM 
    order_01_2021 o
INNER JOIN 
    product p
ON 
    o.product_id = p.product_id;
    
SELECT 
    SUM(t1.quantity * t2.list_price) AS total_sales
FROM 
    order_01_2021 AS t1
INNER JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id;

SELECT * FROM order_01_2021
UNION
SELECT * FROM order_02_2021;

SELECT 
    t1.*
FROM 
    order_01_2021 t1
UNION
SELECT 
    t2.*
FROM 
    order_02_2021 t2
ORDER BY 
    quantity DESC;

SELECT 
    o.*, 
    p.*
FROM 
    order_01_2021 o
LEFT JOIN 
    product p
ON 
    o.product_id = p.product_id;

SELECT 
    o.order_id,
    o.quantity,
    p.product_name,
    p.list_price
FROM 
    order_01_2021 o
LEFT JOIN 
    product p
ON 
    o.product_id = p.product_id;

SELECT DISTINCT t2.product_name
FROM order_01_2021 AS t1
LEFT JOIN product AS t2 ON t1.product_id = t2.product_id

UNION

SELECT DISTINCT t2.product_name
FROM order_02_2021 AS t1
LEFT JOIN product AS t2 ON t1.product_id = t2.product_id;

SELECT 
    t1.order_id,
    t1.quantity,
    t2.product_name,
    t2.list_price
FROM 
    order_01_2021 AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id

UNION ALL

SELECT 
    t1.order_id,
    t1.quantity,
    t2.product_name,
    t2.list_price
FROM 
    order_02_2021 AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id;

SELECT 
    t1.quantity,
    t2.product_name,
    t2.list_price,
    (t1.quantity * t2.list_price) AS total_price
FROM 
    order_01_2021 AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id

UNION ALL

SELECT 
    t1.quantity,
    t2.product_name,
    t2.list_price,
    (t1.quantity * t2.list_price) AS total_price
FROM 
    order_02_2021 AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id;

SELECT * FROM
(
    SELECT 
        t1.quantity,
        t2.product_name,
        t2.list_price,
        (t1.quantity * t2.list_price) AS total_price
    FROM 
        order_01_2021 AS t1
    LEFT JOIN 
        product AS t2 
    ON 
        t1.product_id = t2.product_id

    UNION ALL

    SELECT 
        t1.quantity,
        t2.product_name,
        t2.list_price,
        (t1.quantity * t2.list_price) AS total_price
    FROM 
        order_02_2021 AS t1
    LEFT JOIN 
        product AS t2 
    ON 
        t1.product_id = t2.product_id
) AS combined_orders
ORDER BY 
    total_price DESC
LIMIT 5;

SELECT 
    t2.product_name
FROM 
    order_01_2021 AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id

EXCEPT

SELECT 
    t2.product_name
FROM 
    order_02_2021 AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id;

SELECT 
    t2.product_name
FROM 
    order_02_2021 AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id

EXCEPT

SELECT 
    t2.product_name
FROM 
    order_01_2021 AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id;

SELECT 
    t2.product_name
FROM 
    order_01_2021 AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id

INTERSECT

SELECT 
    t2.product_name
FROM 
    order_02_2021 AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id;

SELECT 
    s.*, 
    p.*
FROM 
    sale s
LEFT JOIN 
    product p
ON 
    s.product_id = p.product_id;

SELECT 
    t2.category_id,
    COUNT(t1.order_id) AS number_of_orders
FROM 
    sale AS t1
LEFT JOIN 
    product AS t2 
ON 
    t1.product_id = t2.product_id
GROUP BY 
    t2.category_id;

DROP TABLE IF EXISTS movie_languages;
DROP TABLE IF EXISTS production_country;
DROP TABLE IF EXISTS movie_genres;
DROP TABLE IF EXISTS country;
DROP TABLE IF EXISTS gender;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS language;
DROP TABLE IF EXISTS movie;
 
CREATE TABLE countrys (
	country_id       INTEGER NOT NULL,
	country_iso_code TEXT,
	country_name     TEXT,
	PRIMARY KEY (country_id)
);
 
CREATE TABLE gender (
	gender_id INTEGER NOT NULL,
	gender    TEXT,
	PRIMARY KEY (gender_id)
);
 
CREATE TABLE genre (
  genre_id   INTEGER NOT NULL,
  genre_name TEXT,
  PRIMARY KEY (genre_id)
);
 
CREATE TABLE language (
	language_id   INTEGER NOT NULL,
	language_code TEXT,
	language_name TEXT,
	PRIMARY KEY (language_id)
);
 
CREATE TABLE movie (
	movie_id     INTEGER NOT NULL,
	title        TEXT,
	budget       INTEGER,
	homepage     TEXT,
	overview     TEXT,
	popularity   REAL,
	release_date TEXT,
	revenue      INTEGER,
	runtime      INTEGER,
	movie_status TEXT,
	tagline      TEXT,
	vote_average REAL,
	vote_count   INTEGER,
	PRIMARY KEY (movie_id)
);
 
CREATE TABLE movie_languages (
	movie_id    INTEGER,
	language_id INTEGER,
	PRIMARY KEY (movie_id, language_id),
	FOREIGN KEY (movie_id) REFERENCES movie (movie_id),
	FOREIGN KEY (language_id) REFERENCES language (language_id)
);
 
CREATE TABLE production_country (
	movie_id   INTEGER,
	country_id INTEGER,
	PRIMARY KEY (movie_id, country_id),
	FOREIGN KEY (movie_id) REFERENCES movie (movie_id),
	FOREIGN KEY (country_id) REFERENCES countrys (country_id)
);
 
CREATE TABLE movie_genres (
	movie_id INTEGER,
	genre_id INTEGER,
	PRIMARY KEY (movie_id, genre_id),
	FOREIGN KEY (movie_id) REFERENCES movie (movie_id),
	FOREIGN KEY (genre_id) REFERENCES genre (genre_id)
);
 
-- country
INSERT INTO countrys VALUES (139,'BR','Brazil');
INSERT INTO countrys VALUES (150,'CZ','Czech Republic');
INSERT INTO countrys VALUES (151,'DE','Germany');
INSERT INTO countrys VALUES (152,'DK','Denmark');
INSERT INTO countrys VALUES (158,'ES','Spain');
INSERT INTO countrys VALUES (161,'FR','France');
INSERT INTO countrys VALUES (162,'GB','United Kingdom');
INSERT INTO countrys VALUES (171,'IN','India');
INSERT INTO countrys VALUES (195,'NZ','New Zealand');
INSERT INTO countrys VALUES (200,'PL','Poland');
INSERT INTO countrys VALUES (214,'US','United States of America');
 
-- gender
INSERT INTO gender VALUES (0,'Unspecified');
INSERT INTO gender VALUES (1,'Female');
INSERT INTO gender VALUES (2,'Male');
 
-- genre
INSERT INTO genre VALUES (12,'Adventure');
INSERT INTO genre VALUES (14,'Fantasy');
INSERT INTO genre VALUES (16,'Animation');
INSERT INTO genre VALUES (18,'Drama');
INSERT INTO genre VALUES (27,'Horror');
INSERT INTO genre VALUES (28,'Action');
INSERT INTO genre VALUES (35,'Comedy');
INSERT INTO genre VALUES (36,'History');
INSERT INTO genre VALUES (37,'Western');
INSERT INTO genre VALUES (53,'Thriller');
INSERT INTO genre VALUES (80,'Crime');
INSERT INTO genre VALUES (99,'Documentary');
INSERT INTO genre VALUES (878,'Science Fiction');
INSERT INTO genre VALUES (9648,'Mystery');
INSERT INTO genre VALUES (10402,'Music');
INSERT INTO genre VALUES (10749,'Romance');
INSERT INTO genre VALUES (10751,'Family');
INSERT INTO genre VALUES (10752,'War');
INSERT INTO genre VALUES (10769,'Foreign');
INSERT INTO genre VALUES (10770,'TV Movie');
 
-- language
INSERT INTO language VALUES (24574,'en','English');
INSERT INTO language VALUES (24576,'de','German');
INSERT INTO language VALUES (24579,'fr','French');
INSERT INTO language VALUES (24580,'es','Spanish');
INSERT INTO language VALUES (24595,'it','Italian');
INSERT INTO language VALUES (24596,'nl','Dutch');
INSERT INTO language VALUES (24606,'pl','Polish');
 
-- movie
INSERT INTO movie VALUES (302699,'Central Intelligence',50000000,'http://www.centralintelligencemovie.com/','After he reunites with an old pal through Facebook, a mild-mannered accountant is lured into the world of international espionage.',45.318703,'2016-06-15',216972543,107,'Released','Saving the world takes a little Hart and a big Johnson',6.20,1650);
INSERT INTO movie VALUES (303858,'Money Monster',27000000,'','Financial TV host Lee Gates and his producer Patty are put in an extreme situation when an irate investor takes over their studio.',38.279458,'2016-05-12',93282604,98,'Released','Not every conspiracy is a theory.',6.50,1068);
INSERT INTO movie VALUES (306745,'Freeheld',7000000,'http://www.freeheld.movie/','New Jersey car mechanic Stacie Andree and her police detective girlfriend Laurel Hester both battle to secure Hester pension benefits after she was diagnosed with a terminal illness.',8.184588,'2015-10-02',573335,103,'Released','A true story of love and injustice.',7.10,164);
INSERT INTO movie VALUES (308467,'Roadside',0,'','Dan Summers and his pregnant wife, Mindy, fight for their lives when they are held hostage in their car by an unseen gunman on the side of a desolate mountain road.',0.160234,'2013-03-01',0,90,'Released','Their fate...is in his hands.',4.20,5);
INSERT INTO movie VALUES (309425,'Do You Believe?',0,'','When a pastor is shaken by the visible faith of a street-corner preacher, he is reminded that true belief always requires action. His response ignites a journey that impacts everyone it touches in ways that only God could orchestrate.',2.470443,'2015-03-20',0,115,'Released','',6.60,48);
INSERT INTO movie VALUES (309503,'Zipper',0,'','Sam Ellis is a man on the rise — a hot-shot federal prosecutor on the cusp of a bright political future. But what was meant to be a one-time experience with an escort turns into a growing addiction — a new demon threatening to destroy his life, family, and career.',8.516229,'2015-08-28',0,103,'Released','Why take the risk',5.50,58);
INSERT INTO movie VALUES (310933,'Bleeding Hearts',0,'','Captured Hearts, an insane serial killer/horror film, is a heart-jumping, heart-crushing - truly demented - roller coaster ride of mystery, violence, sex and gore. With a raging, climatic twist, all hearts end up in one place. And it is not where they are supposed to be.',0.100533,'2013-06-01',0,0,'Released','',2.00,1);
 
-- movie_languages
INSERT INTO movie_languages VALUES (302699,24574);
INSERT INTO movie_languages VALUES (303858,24574);
INSERT INTO movie_languages VALUES (306745,24574);
INSERT INTO movie_languages VALUES (309425,24574);
INSERT INTO movie_languages VALUES (309503,24574);
INSERT INTO movie_languages VALUES (310933,24574);
INSERT INTO movie_languages VALUES (308467,24574);
 
-- production_country
INSERT INTO production_country VALUES (302699,214);
INSERT INTO production_country VALUES (303858,214);
INSERT INTO production_country VALUES (306745,214);
INSERT INTO production_country VALUES (309425,214);
INSERT INTO production_country VALUES (309503,214);
 
-- movie_genres
INSERT INTO movie_genres VALUES (302699,28);
INSERT INTO movie_genres VALUES (302699,35);
INSERT INTO movie_genres VALUES (303858,53);
INSERT INTO movie_genres VALUES (306745,18);
INSERT INTO movie_genres VALUES (306745,10749);
INSERT INTO movie_genres VALUES (308467,18);
INSERT INTO movie_genres VALUES (308467,27);
INSERT INTO movie_genres VALUES (309425,14);
INSERT INTO movie_genres VALUES (309425,18);
INSERT INTO movie_genres VALUES (309503,18);
INSERT INTO movie_genres VALUES (309503,53);
INSERT INTO movie_genres VALUES (310933,27);

SELECT * FROM movie;

SELECT 
    movie_id,
    title,
    popularity,
    vote_average,
    vote_count
FROM 
    movie
ORDER BY 
    vote_average DESC;

SELECT 
    movie_id,
    title,
    popularity,
    vote_average,
    vote_count
FROM 
    movie
WHERE 
    vote_average > 5;

SELECT 
    movie_id,
    title,
    popularity,
    vote_average,
    vote_count
FROM 
    movie
WHERE 
    vote_average > 5
    AND vote_count > 100;

SELECT 
    country_id,
    country_iso_code,
    country_name
FROM 
    country
ORDER BY 
    country_name ASC;

SELECT 
    country_id,
    country_iso_code,
    country_name
FROM 
    country
WHERE 
    LENGTH(country_name) = 5
ORDER BY 
    country_name desc;

SELECT *
FROM country
WHERE country_id IN (150, 161, 200);

SELECT *
FROM language
WHERE language_name LIKE '%ish';

SELECT COUNT(DISTINCT genre_id) AS unique_genres
FROM movie_genres;

SELECT movie_id, COUNT(genre_id) AS number_of_genres
FROM movie_genres
GROUP BY movie_id
ORDER BY number_of_genres DESC;

SELECT *
FROM movie_genres
LEFT JOIN genre ON movie_genres.genre_id = genre.genre_id;

SELECT t1.movie_id, t2.genre_name
FROM movie_genres AS t1
LEFT JOIN genre AS t2 ON t1.genre_id = t2.genre_id;

SELECT t2.genre_name, COUNT(t1.movie_id) AS number_of_movies
FROM movie_genres AS t1
LEFT JOIN genre AS t2 ON t1.genre_id = t2.genre_id
GROUP BY t2.genre_name
ORDER BY number_of_movies DESC;

SELECT t2.genre_name
FROM movie_genres AS t1
LEFT JOIN genre AS t2 ON t1.genre_id = t2.genre_id
GROUP BY t2.genre_name
ORDER BY COUNT(t1.movie_id) DESC
LIMIT 3;

SELECT *
FROM movie
LEFT JOIN movie_genres ON movie.movie_id = movie_genres.movie_id
LEFT JOIN genre ON movie_genres.genre_id = genre.genre_id;

SELECT t1.movie_id, t1.title, t3.genre_name
FROM movie AS t1
LEFT JOIN movie_genres AS t2 ON t1.movie_id = t2.movie_id
LEFT JOIN genre AS t3 ON t2.genre_id = t3.genre_id;

SELECT t1.movie_id, t1.title, t3.genre_name
FROM movie AS t1
LEFT JOIN movie_genres AS t2 ON t1.movie_id = t2.movie_id
LEFT JOIN genre AS t3 ON t2.genre_id = t3.genre_id
WHERE t1.title = 'Roadside';

SELECT t1.movie_id, t1.title, t3.genre_name
FROM movie AS t1
LEFT JOIN movie_genres AS t2 ON t1.movie_id = t2.movie_id
LEFT JOIN genre AS t3 ON t2.genre_id = t3.genre_id
WHERE t3.genre_name = 'Drama';

SELECT *
FROM movie
LEFT JOIN movie_languages ON movie.movie_id = movie_languages.movie_id
LEFT JOIN language ON movie_languages.language_id = language.language_id;

SELECT t1.movie_id, t1.title, t3.language_name
FROM movie AS t1
LEFT JOIN movie_languages AS t2 ON t1.movie_id = t2.movie_id
LEFT JOIN language AS t3 ON t2.language_id = t3.language_id;

SELECT t1.movie_id, t1.title, t3.language_name
FROM movie AS t1
LEFT JOIN movie_languages AS t2 ON t1.movie_id = t2.movie_id
LEFT JOIN language AS t3 ON t2.language_id = t3.language_id
WHERE t1.movie_id IN (306745, 309503);

SELECT *
FROM movie
LEFT JOIN production_country ON movie.movie_id = production_country.movie_id
LEFT JOIN country ON production_country.country_id = country.country_id;

SELECT t1.movie_id, t1.title, t3.country_name
FROM movie AS t1
LEFT JOIN production_country AS t2 ON t1.movie_id = t2.movie_id
LEFT JOIN country AS t3 ON t2.country_id = t3.country_id;

SELECT t1.movie_id, t1.title, t3.country_name
FROM movie AS t1
LEFT JOIN production_country AS t2 ON t1.movie_id = t2.movie_id
LEFT JOIN country AS t3 ON t2.country_id = t3.country_id
WHERE t3.country_name IS NOT NULL;

